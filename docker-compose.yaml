version: "3.9"

name: aiogram_1

services:
  bot:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: bot_app
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
      - REDIS_HOST=redis
    ports:
      - 8000:8000
    restart: always
    volumes:
      - ./bot:/bot_app/bot
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  postgres:
    image: postgres:15.3-alpine
    container_name: bot_pg
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - 5432:5432
    restart: on-failure
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]
      interval: 3s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7.0-alpine
    container_name: bot_redis
    command: redis-server --requirepass ${REDIS_PASS} --maxmemory 1mb --maxmemory-policy allkeys-lru --loglevel warning
    ports:
      - 6379:6379
    restart: on-failure
    volumes:
      - redis_data:/data


networks:
  default:
    name: aiogram_1_network

volumes:
  pg_data:
    name: aiogram_1_pg_data
  redis_data:
    name: aiogram_1_redis_data
